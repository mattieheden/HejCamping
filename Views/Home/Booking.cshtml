@model HejCamping.Models.BookingModel

@{
    ViewData["Title"] = "Book a Cabin";
    var cabins = ViewBag.Cabins as List<HejCamping.Models.Cabin>; 
    var cabinAvailability = ViewBag.CabinAvailability as Dictionary<int, bool>; 
}

<h2 style="margin-top: 100px; text-align: center;">Choose your cabin and date</h2>

<div class="d-flex justify-content-between align-items-start mt-4" style="gap: 20px;">
    
    <!-- Date Picker -->
    <div style="max-width: 300px;">
        <h5>From Date</h5>
        <div id="datepicker1"></div>
        <input type="hidden" id="datepicker1Input" name="FromDate" class="form-control" />
        <h5>To Date</h5>
        <div id="datepicker2"></div>
        <input type="hidden" id="datepicker2Input" name="ToDate" class="form-control" />
    </div>

    <!-- Cabin Map -->
    <div style="flex: 2; position: relative;">
        <img src="~/images/campsite_map.png" alt="cabin Map" style="width: 100%; max-width: 500px; border-radius: 15px;" id="cabinMapImage"/>
        @foreach (var cabin in ViewBag.Cabins as List<HejCamping.Models.Cabin>)
        {
            var isAvailable = cabinAvailability.ContainsKey(cabin.Id) ? cabinAvailability[cabin.Id] : false;
            var color = cabin.IsVacant ? "blue" : "red";
            <div id="cabin-@cabin.Id" 
                style="position: absolute; 
                        top: @(cabin.PositionY)px; 
                        left: @(cabin.PositionX)px; 
                        width: 30px; height: 30px; 
                        background-color: @color; 
                        color: white; 
                        display: flex; 
                        justify-content: center; 
                        align-items: center; 
                        font-weight: bold; 
                        cursor: pointer; 
                        border-radius: 8px;"  
                onclick="selectCabin(@cabin.Id, @cabin.IsVacant.ToString().ToLower())">
                @cabin.Number
            </div>
        }
    </div>
</div>

<!-- Booking Form -->
<form id="bookingForm" asp-action="SubmitBooking" method="post" style="margin-top: 20px;">
    <input type="hidden" id="selectedCabinId" name="CabinId" value="" />
    <input type="hidden" id="selectedFromDateInput" name="FromDate" value="" />
    <input type="hidden" id="selectedToDateInput" name="ToDate" value="" />

    <div class="form-group">
        <label for="Name">Name</label>
        <input type="text" class="form-control narrow-input" id="Name" name="Name" required />
    </div>
    <div class="form-group">
        <label for="Email">Email</label>
        <input type="email" class="form-control narrow-input" id="Email" name="Email" required />
    </div>
    <button type="submit" class="btn btn-primary">Book</button>
</form>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" rel="stylesheet">

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script>
        $(document).ready(function () {

            var cabinAvailability = @Html.Raw(Json.Serialize(ViewBag.CabinAvailability));

            $('#datepicker1').datepicker({
                format: 'mm/dd/yyyy',
                autoclose: true,
                startDate: new Date(),
                endDate: '+1y',
                inline: true,
                todayHighlight: true
            }).on('changeDate', function (e) {
                var fromDate = e.date;
                $('#datepicker1Input').val(fromDate.toISOString().substring(0, 10));
                $('#selectedFromDateInput').val(fromDate.toISOString().substring(0, 10)); // Ensure this hidden input is also set
                $('#datepicker2').datepicker('setStartDate', fromDate);
                updateCabinColors(); // Update colors when date is selected
            });

            $('#datepicker2').datepicker({
                format: 'mm/dd/yyyy',
                autoclose: true,
                startDate: new Date(),
                inline: true
            }).on('changeDate', function (e) {
                var toDate = e.date;
                $('#datepicker2Input').val(toDate.toISOString().substring(0, 10));
                $('#selectedToDateInput').val(toDate.toISOString().substring(0, 10));
                updateCabinColors(); // Update colors when date is selected
            });

            
            function updateCabinColors() {
                var selectedFromDate = $('#datepicker1Input').val();
                var selectedToDate = $('#datepicker2Input').val();

                if (!selectedFromDate || !selectedToDate) {
                    @foreach (var cabin in ViewBag.Cabins) 
                    {
                        <text>
                            $('#cabin-@cabin.Id').css('background-color', 'grey');
                        </text>
                    }
                } else {
                    @foreach (var cabin in ViewBag.Cabins) 
                    {
                        var color = cabinAvailability[@cabin.Id] ? "blue" : "red";
                        <text>
                            $('#cabin-@cabin.Id').css('background-color', '@color');
                        </text>
                    }
                }
            }

            updateCabinColors();

            let selectedCabinId = null;

            window.selectCabin = function(cabinId, isVacant) {
                var selectedFromDate = $('#datepicker1Input').val();
                var selectedToDate = $('#datepicker2Input').val();

                if (!selectedFromDate || !selectedToDate) {
                    alert("Please select dates before choosing a cabin.");
                    return;
                }

                if (!cabinAvailability[cabinId]) {
                    alert("This cabin is not available on the chosen dates.");
                    return;
                }

                if (selectedCabinId !== null) {
                    var prevColor = isVacant ? "blue" : "red";
                    $('#cabin-' + selectedCabinId).css('background-color', prevColor);
                }

                if (isVacant && cabinAvailability[cabinId]) {
                    $('#cabin-' + cabinId).css('background-color', 'green');
                    selectedCabinId = cabinId;
                    $('#selectedCabinId').val(cabinId);
                } else {
                    alert("This cabin is not available on the chosen dates.");
                }
            };

            function validateBookingForm() {
                var selectedFromDate = $('#datepicker1Input').val();
                var selectedToDate = $('#datepicker2Input').val();
                var selectedCabinId = $('#selectedCabinId').val();
                var name = $('#Name').val();
                var email = $('#Email').val();

                if (!selectedCabinId) {
                    alert("Please select a cabin.");
                    return false;
                }

                return true;

            };
            document.getElementById('bookingForm').addEventListener('submit', function(e) {
                // Prevent form submission if validation fails
                if (!validateBookingForm()) {
                    e.preventDefault();
                }
            });
        });
    </script>
}

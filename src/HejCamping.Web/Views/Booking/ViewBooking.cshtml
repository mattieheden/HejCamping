@model HejCamping.Web.Models.BookingViewModel
@using HejCamping.Web.Models

@{
    ViewData["Title"] = "Booking Confirmation";
}

<div class="container-fluid">
    <!-- Booking confirmation -->
    <div class="container-fluid p-5">
        <h1 class="h1 text-center">Booking Overview</h1>
    </div>

    <dl class="row">
        <dt class="col-sm-3">Order number:</dt>
        <dd class="col-sm-9">@Model.OrderNumber</dd>

        <dt class="col-sm-3">Order Date:</dt>
        <dd class="col-sm-9">@Model.OrderDate.ToString("yyyy/MM/dd")</dd>

        <dt class="col-sm-3">Name:</dt>
        <dd class="col-sm-9">@Model.Name</dd>

        <dt class="col-sm-3">Email:</dt>
        <dd class="col-sm-9">@Model.Email</dd>

        <dt class="col-sm-3">Cabin number:</dt>
        <dd class="col-sm-9">@Model.CabinId</dd>

        <dt class="col-sm-3">Dates booked:</dt>
        <dd class="col-sm-9">
            @Model.FromDate.ToString("yyyy/MM/dd"), Check-in time: <strong>15:00</strong> -
            @Model.ToDate.ToString("yyyy/MM/dd"), Check-out time: <strong>12:00</strong>
        </dd>

        <dt class="col-sm-3">Total Price:</dt>
        <dd class="col-sm-9">@Model.TotalPrice.ToString("C", new System.Globalization.CultureInfo("se-SE"))</dd>
    </dl>

    <!-- Admin functionality for bookings -->
    @if (User.Identity.IsAuthenticated)
    {
        <div class="container-fluid">
            <!-- Show button to restore booking if booking is cancelled -->
            @if (Model.IsCancelled == true && DateTime.Now < Model.FromDate)
            {
                <form method="post" asp-controller="Booking" asp-action="RestoreBooking" asp-route-orderNumber="@Model.OrderNumber">
                    <button type="submit" class="btn btn-success">Restore booking</button>
                </form>
            }
            <!-- Show button to delete review if booking has a review -->
            @if (Model.HasReview == true)
            {
                <form method="post" asp-controller="Booking" asp-action="DeleteReview" asp-route-orderNumber="@Model.OrderNumber">
                    <button type="submit" class="btn btn-danger">Delete review</button>
                </form>
            }
        </div>
    }
    
    <!-- Booking options like cancelling or leaving/Updating a review -->
    @if (Model.IsCancelled == false)
    {
        <!-- Show Canel Booking button if FromDate is more than 1 day in the future -->
        @if (DateTime.Now.AddDays(1) < Model.FromDate)
        {
            Console.WriteLine(Model.FromDate < DateTime.Now.AddDays(1));
            <form method="post" asp-controller="Booking" asp-action="CancelBooking" asp-route-orderNumber="@Model.OrderNumber">
                <button type="submit" class="btn btn-danger">Cancel booking</button>
            </form>
        }
        <!-- Show message if booking is too close to check-in date -->
        @if (DateTime.Now.AddDays(1) >= Model.FromDate && DateTime.Now < Model.ToDate)
        {
            <div class="container-fluid">
                <p class="text-muted">You cannot cancel this booking as it is either underway or too close to the check-in date.</p>
            </div>
        }

        <!-- If Booking time has passed and there is no reveiew, Show MakeReview options -->
        @if (DateTime.Now > Model.ToDate && Model.HasReview == false)
        {
            @Html.Partial("CreateReview", new HejCamping.Web.Models.ReviewViewModel { OrderNumber = Model.OrderNumber, Name = Model.Name})
        }
        <!-- If Booking time has passed and there is a review, Show EditReview options -->
        @if (DateTime.Now > Model.ToDate && Model.HasReview == true)
        {
            @Html.Partial("EditReview", new HejCamping.Web.Models.ReviewViewModel { OrderNumber = Model.OrderNumber, Name = Model.Name, ReviewText = Model.ReviewText })
        }
    }
    else 
    {
        <!-- Show message if booking is cancelled -->
        <div class="container-fluid">
            <p class="text-muted">This booking has been cancelled.</p>
        </div>
    }
</div>